{
    "name": "BTicino Smarther Widget",
    "template": "<style>\n#smarther {\n\tposition: absolute;\n\ttop: 0px;\n\tleft: 0px;\n\twidth: 100%;\n\theight: 100%\n}\n\n#smarther .smarther-content-panel {\n\theight: 100%;\n\twidth: 100%;\n\tmargin: 0px;\n\tvertical-align: middle;\n}\n\n.hamburger-class { grid-area: hamburger-area; text-align: right; }\n.sensors-class { grid-area: sensors-area; }\n.status1-class { grid-area: status1-area; }\n.status2-class { grid-area: status2-area; }\n.status3-class { grid-area: status3-area; }\n\n.sensors-class label {\n\tvertical-align: middle;\n}\n\n.status1-class, .status2-class, .status3-class {\n\tfont-size: 14px;\n\ttext-align: left;\n}\n\n.status1-class label, .status2-class label, .status3-class label {\n\theight: 20px;\n\tvertical-align: middle;\n}\n  \n.status1-class i, .status2-class i, .status3-class i {\n\tfont-size: 18px;\n\tcolor: RGB(0, 130, 200);\n\tpadding: 0 10px;\n}\n\n.hamburger-class button {\n\tfont-size: 22px;\n\tbackground-color: rgba(0, 0, 0, 0.0);\n\tpadding: 0px 5px 5px 0px;\n\tborder: 0px;\n}\n\n.smarther-main-grid {\n\tdisplay: grid;\n\tgrid-template-areas:\n    'hamburger-area'\n  \t'sensors-area'\n  \t'status1-area'\n  \t'status2-area'\n  \t'status3-area';\n\tgrid-template-columns: auto;\n\tgrid-template-rows: 25px auto 25px 25px 25px;\n\tgrid-gap: 5px;\n\tpadding: 5px;\n}\n\n.smarther-main-grid > div {\n\tposition: relative;\n}\n\n.smarther-main-grid > div span {\n\tmargin: 0;\n\tposition: absolute;\n\ttop: 50%;\n\tleft: 50%;\n\ttransform: translate(-50%, -50%);\n}\n  \np.main-temperature {\n\tfont-size: 46px;\n\twhite-space: nowrap;\n\tline-height: 1em;\n}\n\np.main-temperature i {\n\tfont-size: 48px;\n\tcolor: RGB(200, 200, 200);\n\tpadding: 0 10px 0 0;\n}\n\np.main-temperature i.on {\n\tcolor: RGB(200, 0, 0);\n}\n\np.main-humidity {\n\tfont-size: 18px;\n\twhite-space: nowrap;\n\tline-height: 1em;\n}\n\np.main-humidity i {\n\tfont-size: 20px;\n\tcolor: RGB(0, 130, 200);\n\tpadding: 0 5px 0 0;\n}\n\nbutton.back-btn {\n\tfont-size: 17px;\n\tbackground-color: rgba(0, 0, 0, 0.0);\n\tborder: none;\n  padding: 0px;\n}\n\nbutton.back-btn i {\n\tfont-size: 20px;\n}\n\n.back-class { grid-area: back-area; }\n.power-class { grid-area: power-area; text-align: right; }\n.row1-class { grid-area: row1-area; }\n.row2-class { grid-area: row2-area; }\n.row3-class { grid-area: row3-area; }\n.row4-class { grid-area: row4-area; }\n.row5-class { grid-area: row5-area; }\n\n.back-class, .row1-class, .row2-class, .row3-class, .row4-class, .row5-class {\n\ttext-align: left;\n\twhite-space: nowrap;\n}\n\n.power-class button {\n\tfont-size: 24px;\n\tbackground-color: rgba(0, 0, 0, 0.0);\n\tborder: none;\n  padding: 0px;\n}\n\n.smarther-sets-grid {\n\tdisplay: grid;\n\tgrid-template-areas:\n  \t'back-area power-area'\n    'row1-area row1-area'\n  \t'row2-area row2-area'\n  \t'row3-area row3-area'\n  \t'row4-area row4-area'\n  \t'row5-area row5-area';\n\tgrid-template-columns: auto auto;\n\tgrid-template-rows: 35px auto auto auto auto auto;\n\tgrid-gap: 5px;\n\tpadding: 5px;\n}\n\n.smarther-sets-grid > div {\n\tposition: relative;\n}\n\n.btn-icon, .btn-icon:hover {\n\tfont-size: 18px;\n\tcolor: RGB(0, 130, 200);\n\tborder: 0px transparent;\n\tbackground-color: RGB(255,255,255,0.0);\n\tcursor: default;\n}\n\n.btn-empty, .btn-empty:hover {\n\tcolor: white;\n\tbackground-color: RGB(0,0,0,0.0);\n\tcursor: default;\n}\n\n#select-mode span, #select-program span, #select-enddate span {\n\tmargin-left: 5px;\n}\n</style>\n\n<widget-icon ng-if=\"config.backdrop\" iconset=\"config.backdrop_iconset\" icon=\"config.backdrop\" backdrop=\"true\" center=\"true\"></widget-icon>\n\n<div id=\"smarther\" ng-init=\"smarther_panel = 'main'\">\n  \n  <!-- Smarther Main Panel --------------------------------------------------------------------------------------------------------------------->\n  <div class=\"smarther-main-grid smarther-content-panel\" ng-show=\"smarther_panel == 'main'\">\n    <div class=\"sensors-class\">\n      <span>\n        <p class=\"main-temperature\">\n          <label><i class=\"glyphicon glyphicon-fire\" ng-class=\"{'on': itemState(config.module_name + '_Status_State') == 'ON'}\"></i></label><label>{{itemState(config.module_name + '_Sensor_Temperature')}}</label>\n        </p>\n      \t<p class=\"main-humidity\">\n          <label><i class=\"glyphicon glyphicon-tint\"></i></label><label>{{itemState(config.module_name + '_Sensor_Humidity')}}</label>\n        </p>\n      </span>\n    </div>\n    <div class=\"status1-class\">\n      <label><i class=\"glyphicon glyphicon-cog\"></i></label><label>{{itemState(config.module_name + '_Status_Mode') | uppercase}}</label>\n    </div>\n\t\t<div class=\"status2-class\">\n      <label><i class=\"glyphicon glyphicon-fire\"></i></label><label>{{itemState(config.module_name + '_Status_Temperature')}}</label>\n    </div>\n\t\t<div class=\"status3-class\">\n      <label><i class=\"glyphicon glyphicon-time\"></i></label><label>{{itemState(config.module_name + '_Status_EndTime') | uppercase}}</label>\n    </div>\n    <div class=\"hamburger-class\">\n      <button ng-click=\"smarther_panel = 'settings'\"><i class=\"glyphicon glyphicon-menu-hamburger\"></i></button>\n    </div>\n  </div>\n\n  <!-- Smarther Settings Panel ----------------------------------------------------------------------------------------------------------------->\n  <div class=\"smarther-sets-grid smarther-content-panel\" ng-show=\"smarther_panel == 'settings'\">\n    <div class=\"back-class\">\n      <button class=\"back-btn\" ng-click=\"smarther_panel = 'main'\"><i class=\"glyphicon glyphicon-home\"></i> HOME</button>\n    </div>\n    <div class=\"power-class\">\n      <button ng-click=\"sendCmd(config.module_name + '_Set_Power', 'ON'); smarther_panel = 'main'\"><i class=\"glyphicon glyphicon-off\"></i></button>\n    </div>\n    <div class=\"row1-class\">\n      <div class=\"btn-group\">\n        <label class=\"btn btn-icon\"><i class=\"glyphicon glyphicon-cog\"></i></label>\n        <div class=\"btn-group\" uib-dropdown=\"true\">\n          <button id=\"select-mode\" class=\"btn btn-default\" uib-dropdown-toggle=\"true\">\n            {{itemState(config.module_name + '_Set_Mode')}}\n            <span class=\"caret\" />\n          </button>\n          <ul class=\"dropdown-menu\" uib-dropdown-menu role=\"menu\" aria-labelledby=\"select-mode\">\n            <li role=\"menuitem\" ng-repeat=\"option in getItem(config.module_name + '_Set_Mode').stateDescription.options\">\n              <a ng-click=\"sendCmd(config.module_name + '_Set_Mode', option.value)\">{{option.label | uppercase}}</a>\n            </li>\n          </ul>\n        </div>\n      </div>        \n    </div>\n    <div class=\"row2-class\">\n      <div class=\"btn-group\" ng-show=\"itemState(config.module_name + '_Set_Mode') == 'AUTOMATIC'\">\n        <label class=\"btn btn-icon\"><i class=\"glyphicon glyphicon-tasks\"></i></label>\n        <div class=\"btn-group\" uib-dropdown=\"true\">\n          <button id=\"select-program\" class=\"btn btn-default\" uib-dropdown-toggle=\"true\">\n          \t{{(getItem(config.module_name + '_Set_Program').stateDescription.options | filter: value=itemState(config.module_name + '_Set_Program'))[0].label | uppercase}}\n            <span class=\"caret\" />\n          </button>\n          <ul class=\"dropdown-menu\" uib-dropdown-menu role=\"menu\" aria-labelledby=\"select-program\">\n            <li role=\"menuitem\" ng-repeat=\"option in getItem(config.module_name + '_Set_Program').stateDescription.options\">\n              <a ng-click=\"sendCmd(config.module_name + '_Set_Program', option.value)\">{{option.label | uppercase}}</a>\n            </li>\n          </ul>\n        </div>\n      </div>\n      <div class=\"btn-group\" ng-show=\"itemState(config.module_name + '_Set_Mode') == 'MANUAL'\">\n        <label class=\"btn btn-icon\"><i class=\"glyphicon glyphicon-fire\"></i></label>\n        <label class=\"btn btn-default\"\n               ng-click=\"t = +itemState(config.module_name + '_Set_Temperature').split(' ')[0] - 1; (t >= config.temp_min) ? sendCmd(config.module_name + '_Set_Temperature', t) : null\">\n          <i class=\"glyphicon glyphicon-menu-left\"></i>\n        </label>\n        <label class=\"btn btn-default btn-empty\">{{itemState(config.module_name + '_Set_Temperature')}}</label>\n        <label class=\"btn btn-default\"\n               ng-click=\"t = +itemState(config.module_name + '_Set_Temperature').split(' ')[0] + 1; (t <= config.temp_max) ? sendCmd(config.module_name + '_Set_Temperature', t) : null\">\n          <i class=\"glyphicon glyphicon-menu-right\"></i>\n        </label>\n      </div>\n      <div class=\"btn-group\" ng-show=\"itemState(config.module_name + '_Set_Mode') == 'BOOST'\">\n        <label class=\"btn btn-icon\"><i class=\"glyphicon glyphicon-play-circle\"></i></label>\n\t\t\t\t<label class=\"btn btn-default btn-empty\" ng-model=\"itemState(config.module_name + '_Set_BoostTime')\" uib-btn-radio=\"option.value\"\n               ng-repeat=\"option in getItem(config.module_name + '_Set_BoostTime').stateDescription.options\"\n               ng-click=\"sendCmd(config.module_name + '_Set_BoostTime', option.value)\">{{option.value}}'</label>\n      </div>\n    </div>\n    <div class=\"row3-class\">\n      <div class=\"btn-group\" ng-show=\"itemState(config.module_name + '_Set_Mode') == 'MANUAL'\">\n        <label class=\"btn btn-icon\"><i class=\"glyphicon glyphicon-calendar\"></i></label>\n        <div class=\"btn-group\" uib-dropdown=\"true\">\n          <button id=\"select-enddate\" class=\"btn btn-default\" uib-dropdown-toggle=\"true\">\n          \t{{(getItem(config.module_name + '_Set_EndDate').stateDescription.options | filter: value=itemState(config.module_name + '_Set_EndDate'))[0].label | uppercase}}\n            <span class=\"caret\" />\n          </button>\n          <ul class=\"dropdown-menu\" uib-dropdown-menu role=\"menu\" aria-labelledby=\"select-enddate\">\n            <li role=\"menuitem\" ng-repeat=\"option in getItem(config.module_name + '_Set_EndDate').stateDescription.options\">\n              <a ng-click=\"sendCmd(config.module_name + '_Set_EndDate', option.value)\">{{option.label | uppercase}}</a>\n            </li>\n          </ul>\n        </div>\n      </div>\n    </div>\n    <div class=\"row4-class\">\n      <div class=\"btn-group\" ng-show=\"itemState(config.module_name + '_Set_Mode') == 'MANUAL' && itemState(config.module_name + '_Set_EndDate') != ''\">\n        <label class=\"btn btn-icon\"><i class=\"glyphicon glyphicon-time\"></i></label>\n        <label class=\"btn btn-default\" ng-click=\"h = +itemState(config.module_name + '_Set_EndHour') - 1; (h >= 0) ? sendCmd(config.module_name + '_Set_EndHour', h) : null\">\n          <i class=\"glyphicon glyphicon-menu-left\"></i>\n        </label>\n        <label class=\"btn btn-default btn-empty\">{{\"%02d\" | sprintf:itemState(config.module_name + '_Set_EndHour')}}</label>\n        <label class=\"btn btn-default\" ng-click=\"h = +itemState(config.module_name + '_Set_EndHour') + 1; (h <= 23) ? sendCmd(config.module_name + '_Set_EndHour', h) : null\">\n          <i class=\"glyphicon glyphicon-menu-right\"></i>\n        </label>\n      </div>\n    </div>\n    <div class=\"row5-class\">\n      <div class=\"btn-group\" ng-show=\"itemState(config.module_name + '_Set_Mode') == 'MANUAL' && itemState(config.module_name + '_Set_EndDate') != ''\">\n        <label class=\"btn btn-icon\"><i class=\"glyphicon glyphicon-dashboard\"></i></label>\n        <label class=\"btn btn-default\" ng-click=\"m = +itemState(config.module_name + '_Set_EndMinute') - 15; (m >= 0) ? sendCmd(config.module_name + '_Set_EndMinute', m) : null\">\n          <i class=\"glyphicon glyphicon-menu-left\"></i>\n        </label>\n        <label class=\"btn btn-default btn-empty\">{{\"%02d\" | sprintf:itemState(config.module_name + '_Set_EndMinute')}}</label>\n        <label class=\"btn btn-default\" ng-click=\"m = +itemState(config.module_name + '_Set_EndMinute') + 15; (m <= 45) ? sendCmd(config.module_name + '_Set_EndMinute', m) : null\">\n          <i class=\"glyphicon glyphicon-menu-right\"></i>\n        </label>\n      </div>\n    </div>\n  </div>\n\n</div>\n",
    "description": "Simple widget to display temperature, mode, etc for a BTicino Smarther Chronothermostat module",
    "author": "Fabio Possieri",
    "settings": [
        {
            "type": "icon",
            "id": "backdrop",
            "label": "Backdrop Icon"
        },
        {
            "type": "string",
            "id": "module_name",
            "label": "Module Base Name",
            "description": "Module items base name (items are: _Sensor_Temperature, _Sensor_Humidity, _Status_State, _Status_Mode, _Status_Temperature, _Status_Program, _Status_EndTime, _Set_Power, _Set_Mode, _Set_Program, _Set_Temperature, _Set_EndDate, _Set_EndHour, _Set_EndMinute, _Set_BoostTime)"
        },
        {
            "type": "number",
            "id": "temp_min",
            "label": "Temperature Min",
            "default": "8",
            "description": "Minimum temperature of the thermostat (> 7 °C)"
        },
        {
            "type": "number",
            "id": "temp_max",
            "label": "Temperature Max",
            "default": "25",
            "description": "Maximum temperature of the thermostat (<= 25 °C)"
        }
    ]
}